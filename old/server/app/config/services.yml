# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # LES CONFIGS Par defaut proposées posent des problème pour l'appel des service
    # default configuration for services in *this* file
    # _defaults:
    #     # automatically injects dependencies in your services
    #     autowire: true
    #     # automatically registers your services as commands, event subscribers, etc.
    #     autoconfigure: true
    #     # this means you cannot fetch services directly from the container via $container->get()
    #     # if you need to do this, you can override this setting on individual services
    #     public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests,DataFixtures}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    admin.type:
        class: AppBundle\Admin\TypeAdmin
        arguments: [~, AppBundle\Entity\Type, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Types, group: Metier}

    admin.category:
        class: AppBundle\Admin\CategoryAdmin
        arguments: [~, AppBundle\Entity\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Categories, group: Metier }

    admin.product:
        class: AppBundle\Admin\ProductAdmin
        arguments: [~, AppBundle\Entity\Product, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Produits, group: Metier }

    admin.commande:
        class: AppBundle\Admin\CommandeAdmin
        arguments: [~, AppBundle\Entity\Commande, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Commandes, group: Achats }

    admin.commandebasket:
        class: AppBundle\Admin\CommandeBasketAdmin
        arguments: [~, AppBundle\Entity\CommandeBasket, ~]
        tags:
            - { name: sonata.admin, manager_type: orm }

    admin.creation:
        class: AppBundle\Admin\CreationAdmin
        arguments: [~, AppBundle\Entity\Creation, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Creation, group: Metier }
